// Code generated by protoc-gen-toit. DO NOT EDIT.
// source: google/protobuf/compiler/plugin.proto

import .....protobuf as _protobuf
import core as _core
import ....google.protobuf.descriptor-pb as _descriptor

// MESSAGE START: .google.protobuf.compiler.Version
class Version extends _protobuf.Message:
  major/int := 0
  minor/int := 0
  patch/int := 0
  suffix/string := ""

  constructor
      --major/int?=null
      --minor/int?=null
      --patch/int?=null
      --suffix/string?=null:
    if major != null:
      this.major = major
    if minor != null:
      this.minor = minor
    if patch != null:
      this.patch = patch
    if suffix != null:
      this.suffix = suffix

  constructor.deserialize r/_protobuf.Reader:
    r.read-message:
      r.read-field 1:
        major = r.read-primitive _protobuf.PROTOBUF-TYPE-INT32
      r.read-field 2:
        minor = r.read-primitive _protobuf.PROTOBUF-TYPE-INT32
      r.read-field 3:
        patch = r.read-primitive _protobuf.PROTOBUF-TYPE-INT32
      r.read-field 4:
        suffix = r.read-primitive _protobuf.PROTOBUF-TYPE-STRING

  serialize w/_protobuf.Writer --as-field/int?=null --oneof/bool=false -> none:
    w.write-message-header this --as-field=as-field --oneof=oneof
    w.write-primitive _protobuf.PROTOBUF-TYPE-INT32 major --as-field=1
    w.write-primitive _protobuf.PROTOBUF-TYPE-INT32 minor --as-field=2
    w.write-primitive _protobuf.PROTOBUF-TYPE-INT32 patch --as-field=3
    w.write-primitive _protobuf.PROTOBUF-TYPE-STRING suffix --as-field=4

  num-fields-set -> int:
    return (major == 0 ? 0 : 1)
      + (minor == 0 ? 0 : 1)
      + (patch == 0 ? 0 : 1)
      + (suffix.is-empty ? 0 : 1)

  protobuf-size -> int:
    return (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-INT32 major --as-field=1)
      + (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-INT32 minor --as-field=2)
      + (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-INT32 patch --as-field=3)
      + (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-STRING suffix --as-field=4)

// MESSAGE END: .google.protobuf.compiler.Version

// MESSAGE START: .google.protobuf.compiler.CodeGeneratorRequest
class CodeGeneratorRequest extends _protobuf.Message:
  file-to-generate/List/*<string>*/ := []
  parameter/string := ""
  proto-file/List/*<_descriptor.FileDescriptorProto>*/ := []
  compiler-version/Version := Version

  constructor
      --file-to-generate/List?/*<string>*/=null
      --parameter/string?=null
      --proto-file/List?/*<_descriptor.FileDescriptorProto>*/=null
      --compiler-version/Version?=null:
    if file-to-generate != null:
      this.file-to-generate = file-to-generate
    if parameter != null:
      this.parameter = parameter
    if proto-file != null:
      this.proto-file = proto-file
    if compiler-version != null:
      this.compiler-version = compiler-version

  constructor.deserialize r/_protobuf.Reader:
    r.read-message:
      r.read-field 1:
        file-to-generate = r.read-array _protobuf.PROTOBUF-TYPE-STRING file-to-generate:
          r.read-primitive _protobuf.PROTOBUF-TYPE-STRING
      r.read-field 2:
        parameter = r.read-primitive _protobuf.PROTOBUF-TYPE-STRING
      r.read-field 15:
        proto-file = r.read-array _protobuf.PROTOBUF-TYPE-MESSAGE proto-file:
          _descriptor.FileDescriptorProto.deserialize r
      r.read-field 3:
        compiler-version = Version.deserialize r

  serialize w/_protobuf.Writer --as-field/int?=null --oneof/bool=false -> none:
    w.write-message-header this --as-field=as-field --oneof=oneof
    w.write-array _protobuf.PROTOBUF-TYPE-STRING file-to-generate --as-field=1: | value/string | 
      w.write-primitive _protobuf.PROTOBUF-TYPE-STRING value --in-array
    w.write-primitive _protobuf.PROTOBUF-TYPE-STRING parameter --as-field=2
    w.write-array _protobuf.PROTOBUF-TYPE-MESSAGE proto-file --as-field=15: | value/_descriptor.FileDescriptorProto | 
      value.serialize w
    compiler-version.serialize w --as-field=3

  num-fields-set -> int:
    return (file-to-generate.is-empty ? 0 : 1)
      + (parameter.is-empty ? 0 : 1)
      + (proto-file.is-empty ? 0 : 1)
      + (compiler-version.is-empty ? 0 : 1)

  protobuf-size -> int:
    return (_protobuf.size-array _protobuf.PROTOBUF-TYPE-STRING file-to-generate --as-field=1)
      + (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-STRING parameter --as-field=2)
      + (_protobuf.size-array _protobuf.PROTOBUF-TYPE-MESSAGE proto-file --as-field=15)
      + (_protobuf.size-embedded-message (compiler-version.protobuf-size) --as-field=3)

// MESSAGE END: .google.protobuf.compiler.CodeGeneratorRequest

// MESSAGE START: .google.protobuf.compiler.CodeGeneratorResponse
// ENUM START: CodeGeneratorResponse_Feature
CodeGeneratorResponse-Feature-FEATURE-NONE/int/*enum<CodeGeneratorResponse_Feature>*/ ::= 0
CodeGeneratorResponse-Feature-FEATURE-PROTO3-OPTIONAL/int/*enum<CodeGeneratorResponse_Feature>*/ ::= 1
// ENUM END: .google.protobuf.compiler.CodeGeneratorResponse.Feature

// MESSAGE START: .google.protobuf.compiler.CodeGeneratorResponse.File
class CodeGeneratorResponse-File extends _protobuf.Message:
  name/string := ""
  insertion-point/string := ""
  content/string := ""
  generated-code-info/_descriptor.GeneratedCodeInfo := _descriptor.GeneratedCodeInfo

  constructor
      --name/string?=null
      --insertion-point/string?=null
      --content/string?=null
      --generated-code-info/_descriptor.GeneratedCodeInfo?=null:
    if name != null:
      this.name = name
    if insertion-point != null:
      this.insertion-point = insertion-point
    if content != null:
      this.content = content
    if generated-code-info != null:
      this.generated-code-info = generated-code-info

  constructor.deserialize r/_protobuf.Reader:
    r.read-message:
      r.read-field 1:
        name = r.read-primitive _protobuf.PROTOBUF-TYPE-STRING
      r.read-field 2:
        insertion-point = r.read-primitive _protobuf.PROTOBUF-TYPE-STRING
      r.read-field 15:
        content = r.read-primitive _protobuf.PROTOBUF-TYPE-STRING
      r.read-field 16:
        generated-code-info = _descriptor.GeneratedCodeInfo.deserialize r

  serialize w/_protobuf.Writer --as-field/int?=null --oneof/bool=false -> none:
    w.write-message-header this --as-field=as-field --oneof=oneof
    w.write-primitive _protobuf.PROTOBUF-TYPE-STRING name --as-field=1
    w.write-primitive _protobuf.PROTOBUF-TYPE-STRING insertion-point --as-field=2
    w.write-primitive _protobuf.PROTOBUF-TYPE-STRING content --as-field=15
    generated-code-info.serialize w --as-field=16

  num-fields-set -> int:
    return (name.is-empty ? 0 : 1)
      + (insertion-point.is-empty ? 0 : 1)
      + (content.is-empty ? 0 : 1)
      + (generated-code-info.is-empty ? 0 : 1)

  protobuf-size -> int:
    return (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-STRING name --as-field=1)
      + (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-STRING insertion-point --as-field=2)
      + (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-STRING content --as-field=15)
      + (_protobuf.size-embedded-message (generated-code-info.protobuf-size) --as-field=16)

// MESSAGE END: .google.protobuf.compiler.CodeGeneratorResponse.File

class CodeGeneratorResponse extends _protobuf.Message:
  error/string := ""
  supported-features/int := 0
  file/List/*<CodeGeneratorResponse_File>*/ := []

  constructor
      --error/string?=null
      --supported-features/int?=null
      --file/List?/*<CodeGeneratorResponse_File>*/=null:
    if error != null:
      this.error = error
    if supported-features != null:
      this.supported-features = supported-features
    if file != null:
      this.file = file

  constructor.deserialize r/_protobuf.Reader:
    r.read-message:
      r.read-field 1:
        error = r.read-primitive _protobuf.PROTOBUF-TYPE-STRING
      r.read-field 2:
        supported-features = r.read-primitive _protobuf.PROTOBUF-TYPE-UINT64
      r.read-field 15:
        file = r.read-array _protobuf.PROTOBUF-TYPE-MESSAGE file:
          CodeGeneratorResponse-File.deserialize r

  serialize w/_protobuf.Writer --as-field/int?=null --oneof/bool=false -> none:
    w.write-message-header this --as-field=as-field --oneof=oneof
    w.write-primitive _protobuf.PROTOBUF-TYPE-STRING error --as-field=1
    w.write-primitive _protobuf.PROTOBUF-TYPE-UINT64 supported-features --as-field=2
    w.write-array _protobuf.PROTOBUF-TYPE-MESSAGE file --as-field=15: | value/CodeGeneratorResponse-File | 
      value.serialize w

  num-fields-set -> int:
    return (error.is-empty ? 0 : 1)
      + (supported-features == 0 ? 0 : 1)
      + (file.is-empty ? 0 : 1)

  protobuf-size -> int:
    return (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-STRING error --as-field=1)
      + (_protobuf.size-primitive _protobuf.PROTOBUF-TYPE-UINT64 supported-features --as-field=2)
      + (_protobuf.size-array _protobuf.PROTOBUF-TYPE-MESSAGE file --as-field=15)

// MESSAGE END: .google.protobuf.compiler.CodeGeneratorResponse

